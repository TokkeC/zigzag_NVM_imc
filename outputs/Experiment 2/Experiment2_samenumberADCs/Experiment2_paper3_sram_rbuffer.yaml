name: Experiment2_2T2R_pseud_crossbar_sram_rbuffer
# 2T2R Pseudo-Crossbar Array

memories:
  cells:
    size: 8
    r_bw: 8
    w_bw: 8
    r_cost: 0
    w_cost: 0.095
    area: 0
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 0
    operands: [I2]
    ports:
      - fh: rw_port_1
        tl: rw_port_1
    served_dimensions: [] # Fully unrolled

  rf_1B:
    size: 8
    r_bw: 8
    w_bw: 8
    r_cost: 0.01
    w_cost: 0.01
    area: 0
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1
    operands: [I1]
    ports:
      - fh: w_port_1
        tl: r_port_1
    served_dimensions: [D1]

  rf_2B:
    size: 16
    r_bw: 16
    w_bw: 16
    r_cost: 0.021
    w_cost: 0.021
    area: 0
    r_port: 2
    w_port: 2
    rw_port: 0
    latency: 1
    operands: [O]
    ports:
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_2
        th: r_port_2
    served_dimensions: [D2]

  L1_ReRAM_2MB: # L1 memory level - On-chip ReRAM buffer
    size: 16777216 # unit: bit, 2048 * 1024 * 8 bits
    r_bw: 512 # unit: bit
    w_bw: 512 # unit: bit
    r_cost: 200 # unit: pJ, per 512 bits read
    w_cost: 2075 # unit: pJ, per 512 bits read
    area: 1.7892 # kept the same and boosted the size
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1 #latency is higher, but within clock period
    min_r_granularity: 64
    min_w_granularity: 64
    operands: [ I1, O ]
    ports:
      - fh: w_port_1
        tl: r_port_1
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_1
        th: r_port_1
    served_dimensions: [ D1, D2 ]

  L2_DRAM: # L2 memory level - Off-chip DRAM
    size: 10000000000
    r_bw: 64
    w_bw: 64
    r_cost: 700 # unit: pJ, per 64 bits read
    w_cost: 750 # unit: pJ, per 64 bits write
    area: 0 # off-chip
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 1
    operands: [ I1, I2, O ]
    ports:
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
        fl: rw_port_1
        th: rw_port_1
    served_dimensions: [ D1, D2 ]

operational_array:
  is_imc: True
  is_nvm: False
  imc_type: analog
  input_precision: [8, 8] # unit: bit, Inputs and Weights
  bit_serial_precision: 4 # unit: bit, HOW MANY BITS CAN BE PUT ON THE WORDLINE AT ONCE!!!
  adc_resolution: 8 # unit: bit, Output precision, SAR ADC -> What is already modeled for normal CIM
  # Actually the ADC resolution is 8 bit, but due to the relaxed requirements they could shrink them quite a bit
  dimensions: [D1, D2]
  sizes: [8, 512]  # SAME NUMBER OF BITS CHOSEN, NOT COLUMNS OR ROWS
