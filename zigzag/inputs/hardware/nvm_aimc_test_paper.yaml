name: nvm_aimc1 # Light_CiM (28 nm)

memories:
  cells:
    size: 8 # Weight precision is 8 bits, and I'll just set it as 1 weight is 1 cell
    r_bw: 8 # Reading and Writing them all at once
    w_bw: 8 # Reading and Writing them all at once
    r_cost: 0 #BECAUSE IT IS NVM CIM, IT IS CALCULATED IN THE COST MODEL -> Reading itself no extra energy
    w_cost: 0.080 # Writing 8bit weights into the cell -> Now as 10 pJ per 1 bit cell
    area: 0.0000125 # in mm^2 -> THIS ONE REPRESENTS THE CIM CELL SIZE, FOR THE WHOLE 8 CELLS (without the mults)
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 0 # Not on critical path
    operands: [I2] # weights
    ports:
      - fh: rw_port_1
        tl: rw_port_1
    served_dimensions: [] # Fully unrolled over all multipliers

  rf_1B: #Also ReRAM actually!
    size: 8
    r_bw: 8
    w_bw: 8
    r_cost: 0.080
    w_cost: 0.080
    area: 0.0000125
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1
    operands: [I1] #Inputs
    ports:
      - fh: w_port_1
        tl: r_port_1
    served_dimensions: [D1,D3]

  rf_2B:
    size: 8
    r_bw: 8
    w_bw: 8
    r_cost: 0.080
    w_cost: 0.080
    area: 0.0000125
    r_port: 2
    w_port: 2
    rw_port: 0
    latency: 1
    operands: [I2] # outputs
    ports:
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_2
        th: r_port_2
    served_dimensions: [D2,D3]

  sram_256KB:
    size: 262144
    r_bw: 512
    w_bw: 512
    r_cost: 416.16 #same as tpu_like
    w_cost: 378.4 #same as tpu_like
    area: 0
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1
    min_r_granularity: 64
    min_w_granularity: 64
    operands: [I1, O]
    ports:
      - fh: w_port_1
        tl: r_port_1
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_1
        th: r_port_1
    served_dimensions: [D1, D2, D3]

  dram:
    size: 10000000000
    r_bw: 64
    w_bw: 64
    r_cost: 700 #same as tpu_like
    w_cost: 750 #same as tpu_like
    area: 0
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 1
    operands: [I1, I2, O]
    ports:
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
        fl: rw_port_1
        th: rw_port_1
    served_dimensions: [D1, D2, D3]

operational_array:
  is_imc: True
  is_nvm: True
  is_crossbar: False # is 1T1R
  imc_type: analog
  input_precision: [8, 8] # unit: bit, Inputs and Weights
  bit_serial_precision: 1 # unit: bit, HOW MANY BITS CAN BE PUT ON THE WORDLINE AT ONCE!!!
  adc_resolution: 8 # unit: bit, Output precision, sensing precision
  dimensions: [D1, D2, D3]
  sizes: [12288, 1536, 168] #128x8x12 (but /8 for bits)
