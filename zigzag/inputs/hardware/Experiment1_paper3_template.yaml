name: 2T2R_pseudo_crossbar_experiment_template
# 2T2R Pseudo-Crossbar Array

memories:
  cells:
    size: 8 #synaptic cell for mapping
    r_bw: 8 # Reading and Writing them all at once
    w_bw: 8 # Reading and Writing them all at once
    r_cost: 0 #BECAUSE IT IS NVM CIM, IT IS CALCULATED IN THE COST MODEL -> Reading itself no extra energy
    w_cost: 39.26873290771637 # Writing 8bit weights into the cell
    area: 0 #0.0000125 # in mm^2 -> THIS ONE REPRESENTS THE CIM CELL SIZE, FOR THE WHOLE 8 CELLS (without the mults)
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 0 # Not on critical path
    operands: [I2] # weights
    ports:
      - fh: rw_port_1
        tl: rw_port_1
    served_dimensions: [] # Fully unrolled over all multipliers

  rf_1B:
    size: 8
    r_bw: 8
    w_bw: 8
    r_cost: 0.021
    w_cost: 0.021
    area: 0
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1
    operands: [I1]
    ports:
      - fh: w_port_1
        tl: r_port_1
    served_dimensions: [D1]

  rf_2B:
    size: 16
    r_bw: 16
    w_bw: 16
    r_cost: 0.021
    w_cost: 0.021
    area: 0
    r_port: 2
    w_port: 2
    rw_port: 0
    latency: 1
    operands: [O]
    ports:
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_2
        th: r_port_2
    served_dimensions: [D2]

  L1_SRAM_512KB: # L1 memory level - On-chip SRAM buffer
    size: 4194304 # unit: bit, 512 * 1024 * 8 bits
    r_bw: 512 # unit: bit
    w_bw: 512 # unit: bit
    r_cost: 416.16 # unit: pJ, per 512 bits read
    w_cost: 378.4 # unit: pJ, per 512 bits read
    area: 0
    r_port: 1
    w_port: 1
    rw_port: 0
    latency: 1
    min_r_granularity: 64
    min_w_granularity: 64
    operands: [ I1, O ]
    ports:
      - fh: w_port_1
        tl: r_port_1
      - fh: w_port_1
        tl: r_port_1
        fl: w_port_1
        th: r_port_1
    served_dimensions: [ D1, D2 ]

  L2_DRAM: # L2 memory level - Off-chip DRAM
    size: 10000000000
    r_bw: 64
    w_bw: 64
    r_cost: 700 # unit: pJ, per 64 bits read
    w_cost: 750 # unit: pJ, per 64 bits write
    area: 0 # off-chip
    r_port: 0
    w_port: 0
    rw_port: 1
    latency: 1
    operands: [ I1, I2, O ]
    ports:
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
      - fh: rw_port_1
        tl: rw_port_1
        fl: rw_port_1
        th: rw_port_1
    served_dimensions: [ D1, D2 ]

operational_array:
  is_imc: True
  is_nvm: True
  imc_type: analog
  input_precision: [8, 8] # unit: bit, Inputs and Weights
  bit_serial_precision: 1 # unit: bit, HOW MANY BITS CAN BE PUT ON THE WORDLINE AT ONCE!!!
  adc_resolution: 4 # unit: bit, Output precision, SAR ADC -> What is already modeled for normal CIM
  # Actually the quantization is near 6 bit, but they use a 4 bit ADC with some extra circuitry
  dimensions: [D1, D2]
  sizes: [128, 1024] #1024x1024 (but for bits) #first columns, after rows

nvm_param:
  nvm_array_type: 1T1R
  tech_node: 0.028
  size_nvm: 1 # ReRAM only holding 1 bit
  V_read: 0.15
  I_LRS: 0.000004
  I_HRS: 0.0000001
  V_wl_swing_read: 0.8
  V_bl_swing_read: 0.15
  ADC_share_factor: 8
  cell_area_F_multiplier: 500
  # area_access_transistor_mm2: # let it be computed by the framework
